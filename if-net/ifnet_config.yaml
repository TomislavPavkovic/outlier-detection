# Those parameters are used by multiple scripts
general:
  pointcloud: False
  pointcloud_samples: 3000
  sample_distribution: [0.5, 0.5]
  sample_sigmas: [0.1, 0.01]
  data_path: '/home/tomislav/datasets-ct-sized/dataset-CACTS/right kidney-ifnet'
  split_file: '/home/tomislav/datasets-ct-sized/dataset-CACTS/right kidney-ifnet/split.npz'

  resolution: 128
  model: 'ShapeNetPoints'


voxelize_from_nifti:
  input: '/home/tomislav/datasets-ct-sized/dataset-CACTS/right kidney'
  output: '/home/tomislav/datasets-ct-sized/dataset-CACTS/right kidney-ifnet'


create_voxel_off:
  root: '/home/tomislav/datasets-ct-sized/dataset-CACTS/right kidney-ifnet/0001_visceral_gc/labels/10000005_right kidney_sized'
  unpackbits: True
  min: -0.5
  max: 0.5


rename_voxel_off:
  root: '/home/tomislav/datasets-ct-sized/dataset-CACTS/right kidney-ifnet'


boundary_sampling:
  root: '/home/tomislav/datasets-ct-sized/dataset-CACTS/right kidney-ifnet'
  #specifies standard deviations of the normally distributed displacements added onto surface samples.
  sigmas: [0.1, 0.01]
  sample_number: 100000


train:
  epochs: 1500
  batch_size: 8
  optimizer: 'Adam'
  dropout_probability: 0
  adam_weight_decay: 1e-5
  deleted_patch_min_size: 0.0
  deleted_patch_max_size: 30.0


generate:
  decoder_hidden_dim: 256
  mode: 'test'
  retrieval_resolution: 256
  #model checkpoint used for generation, the one with lowest validation loss is specified in filename val_min=***.npy in the experiment folder
  checkpoint: 157
  #choose the number of points that fit into GPU memory at once (400k for small GPU's)
  batch_points: 500000
  #choose if training during inference should be enabled
  training_during_inference: False
  #generate samples for all available experiments
  generate_all: False
  #generate a single reconstruction
  single_image: False
  #out_path: '/home/tomislav'


voxelize:
  #root folder of the generate.py output
  root: '/home/tomislav/outlier-detection/if-net/experiments/iVoxels_dist-0.5_0.5_sigmas-0.1_0.01_v128_mShapeNetPoints/evaluation_157_@256_def_p_sized/generation'
  #filename of voxelize.py output (default: surface_reconstruction.off)
  filename: 'surface_reconstruction.off'
  #generate samples for all available experiments
  generate_all: False

convert_to_nifti:
  #root folder of the generate.py output
  input: '/home/tomislav/outlier-detection/if-net/experiments/iVoxels_dist-0.5_0.5_sigmas-0.1_0.01_v128_mShapeNetPoints/evaluation_157_@256_def_p_sized/generation'
  #folder where generated nifti files will be saved
  output: '/home/tomislav/outlier-detection/if-net/experiments/iVoxels_dist-0.5_0.5_sigmas-0.1_0.01_v128_mShapeNetPoints/evaluation_157_@256_def_p_sized/generation/nifties/'
  #unprocessed dataset folder (nifti format) of the dataset used for generate.py
  ground_truth: '/home/tomislav/datasets-ct-sized/dataset-CACTS/right kidney/'
  #should be True only for automated prediction because of the different naming scheme
  is_prediction: False
  #generate samples for all available experiments
  generate_all: False